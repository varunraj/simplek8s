PODS
----

Create Pod (kind) file
1) Use the command to create pod ( WE DONT CREATE PODS DIRECTLY. IT SHOULD BE DONE USING DEPLOYMENTS )

          => sudo microk8s.kubectl apply -f posts.yaml

2) Get the status of pods

          => sudo microk8s.kubectl get pods
          
3) More details on a specific pod

          => sudo microk8s.kubectl describe pod posts
          
4) Execute a command in a running pod (container inside the pod). If multiple containers are running inside
a pod, then it will prompt to enter the specific container

          => kubectl exec -it [pod_name][cmd]

5) Get logs

          => kubectl logs [pod_name]

6) Delete pods
          
          => kubectl delete pod [pod_name]
          
          
// DEPLOYMENT 
--------------

Add a deployment object using apply -f command.

1) After a pod is created using deployment, get the deployment details as below

             => kubectl get deployments
             
2) Describe and delete as deployment as below

            => kubectl describe deployment posts-depl
            => kubectl delete deployment posts-depl => All associated pods will be deleted
            
 3) Update an image ( when there is a code change )
 
            -> Create a new image using docker with a new tag
            -> Update the tag name in image section of deployment file
            -> apply the new deployment. Now the old pods will be terminated and new one will be up and running
          
          Updating the pod without changing the version of container in the code
          ----------------------------------------------------------------------
           -> Build image using latest tag (dont provide a tag when image is built)
           - run below command
           
                    => kubectl rollout restart deployment posts-depl  (posts-depl is the name of deployment)
                    
   SERVICES
   --------
   
   Services are to create networking with pods
   
   Type of service
   
    - Cluster IP -> Set up easy to remember url to access the port. Only expose pod to inside cluster.
    - Node Port -> Make a pod accessable from outrside the cluster. Used for Dev process
    - Load Balancer -> Make pod available to outside the cluster - Right way in production
    - External Name -> Redirects an in-cluser request to CNAME url 
   
           

